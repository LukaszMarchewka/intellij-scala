package org.jetbrains.plugins.scala.config.ui;

import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.TextFieldWithBrowseButton;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.jetbrains.plugins.scala.config.LibraryId;
import org.jetbrains.plugins.scala.config.LibraryLevel;

import javax.swing.*;
import java.awt.*;

public class ScalaSupportWizard {
    private JPanel contentPane;
    private JRadioButton choiceNew;
    private JRadioButton choiceManual;
    private TextFieldWithBrowseButton fieldHome;
    private JTextField fieldCompilerName;
    private JLabel labelState;
    private JTextField fieldLibraryName;
    private JLabel labelCreateCompilerLibrary;
    private JLabel labelCreateStandardLibrary;
    private JCheckBox makeGlobalLibrariesCheckBox;

    private ScalaSupportUiBase uiUtil;

    public ScalaSupportWizard(Project project) {
        uiUtil = new ScalaSupportUiBase(project, fieldHome, labelState, fieldCompilerName,
                fieldLibraryName, makeGlobalLibrariesCheckBox, new JRadioButton[]{choiceNew, choiceManual}) {
            @Override
            protected void updateSectionsState() {
                uiUtil.setEnabled(choiceNew.isSelected(),
                        fieldHome, labelState, labelCreateCompilerLibrary, fieldCompilerName, makeGlobalLibrariesCheckBox,
                        labelCreateStandardLibrary, fieldLibraryName);
            }
        };

        uiUtil.initControls();
    }

    public void init() {
        uiUtil.guessHome();
        uiUtil.updateSectionsState();
    }

    public Choice getChoice() {
        if (choiceNew.isSelected()) return Choice.AddNew;
        if (choiceManual.isSelected()) return Choice.DoNothing;
        throw new RuntimeException("Unknown selected section");
    }

    public String getHome() {
        return fieldHome.getText().trim();
    }

    public LibraryId getCompilerLibraryId() {
        return new LibraryId(fieldCompilerName.getText().trim(), getLibrariesLevel());
    }

    public LibraryId getStandardLibraryId() {
        return new LibraryId(fieldLibraryName.getText().trim(), getLibrariesLevel());
    }

    public JComponent getComponent() {
        return contentPane;
    }

    private LibraryLevel getLibrariesLevel() {
        return makeGlobalLibrariesCheckBox.isSelected() ? LibraryLevel.Global : LibraryLevel.Project;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(9, 10, new Insets(0, 0, 0, 0), -1, -1));
        choiceNew = new JRadioButton();
        choiceNew.setSelected(true);
        choiceNew.setText("Use Scala distribution");
        contentPane.add(choiceNew, new GridConstraints(0, 0, 1, 10, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        choiceManual = new JRadioButton();
        choiceManual.setText("Manual configuration");
        contentPane.add(choiceManual, new GridConstraints(7, 0, 1, 10, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPane.add(spacer1, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPane.add(spacer2, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 15), null, 0, false));
        fieldHome = new TextFieldWithBrowseButton();
        contentPane.add(fieldHome, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(220, -1), null, 0, false));
        final Spacer spacer3 = new Spacer();
        contentPane.add(spacer3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, null, new Dimension(20, -1), null, 0, false));
        labelState = new JLabel();
        labelState.setVerticalAlignment(1);
        contentPane.add(labelState, new GridConstraints(2, 1, 1, 7, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(20, 20), null, new Dimension(270, -1), 0, false));
        makeGlobalLibrariesCheckBox = new JCheckBox();
        makeGlobalLibrariesCheckBox.setText("Make global libraries");
        contentPane.add(makeGlobalLibrariesCheckBox, new GridConstraints(5, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fieldCompilerName = new JTextField();
        contentPane.add(fieldCompilerName, new GridConstraints(3, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelCreateCompilerLibrary = new JLabel();
        labelCreateCompilerLibrary.setText("Compiler library name:");
        contentPane.add(labelCreateCompilerLibrary, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fieldLibraryName = new JTextField();
        contentPane.add(fieldLibraryName, new GridConstraints(4, 2, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelCreateStandardLibrary = new JLabel();
        labelCreateStandardLibrary.setText("Standard library name:");
        contentPane.add(labelCreateStandardLibrary, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        contentPane.add(spacer4, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 5), null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(choiceNew);
        buttonGroup.add(choiceManual);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
